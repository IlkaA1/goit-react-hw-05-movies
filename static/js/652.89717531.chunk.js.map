{"version":3,"file":"static/js/652.89717531.chunk.js","mappings":"8SAEMA,EAAU,mCAEHC,EAAU,mCAAG,oGACDC,EAAAA,EAAAA,IAAA,gEACoCF,EADpC,oBADC,cAClBG,EADkB,yBAIjBA,GAJiB,2CAAH,qDAOVC,EAAsB,mCAAG,WAAMC,GAAN,uFACbH,EAAAA,EAAAA,IAAA,6CACiBG,EADjB,oBAC+BL,EAD/B,oBADa,cAC9BG,EAD8B,gBAIvBA,EAJuB,mFAAH,sDAOtBG,EAAS,mCAAG,WAAMD,GAAN,uFACAH,EAAAA,EAAAA,IAAA,6CACiBG,EADjB,4BACuCL,EADvC,oBADA,cACjBG,EADiB,yBAKhBA,GALgB,2CAAH,sDAQTI,EAAY,mCAAG,WAAMF,GAAN,uFACHH,EAAAA,EAAAA,IAAA,6CACiBG,EADjB,4BACuCL,EADvC,oBADG,cACpBG,EADoB,yBAKnBA,GALmB,2CAAH,sDAQZK,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,0DAC8BO,EAD9B,oBACgDT,EADhD,oBADM,cACvBG,EADuB,yBAKtBA,GALsB,2CAAH,qD,qICjC5B,EAAwB,4BAAxB,EAA6D,6BAA7D,EAA+F,yBAA/F,EAA+H,2B,2BCkE/H,EA7DqB,WACnB,OAA4BO,EAAAA,EAAAA,UAAS,MAArC,eAAOD,EAAP,KAAeE,EAAf,KACA,GAAsCD,EAAAA,EAAAA,YAAtC,eAAOE,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAOF,EAAaG,IAAI,UAE9BC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,WAAMX,GAAN,iGAEPD,EAAAA,EAAAA,IAAgBC,GAAQY,MAAK,SAAAC,GACjCT,EAAeS,EAAIC,KAAKC,QACzB,IAJY,sDAKJC,EALI,KAKJA,MACTC,IAAAA,OAAAA,QAAwBD,GANX,wDAAH,sDAUD,OAATR,IAEOA,GACTG,EAASH,GAGPR,GACFW,EAASX,GAEZ,GAAE,CAACA,EAAQQ,EAAML,IAclB,OACE,iCACE,kBAAMe,SAdW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OAAOd,KAAKe,MAC3B,IAAKF,EACH,OAAOJ,IAAAA,OAAAA,QAAwB,mCAEjCV,EAAgB,CAAEiB,MAAOH,IACzBnB,EAAUmB,GAEVF,EAAEG,OAAOG,OACV,EAIiCC,UAAWC,EAAzC,WACE,kBAAOC,KAAK,OAAOC,KAAK,OAAOH,UAAWC,KAC1C,mBAAQC,KAAK,SAASF,UAAWC,EAAjC,uBAIDxB,IACC,eAAIuB,UAAWC,EAAf,SACGxB,EAAY2B,KAAI,SAAAtB,GAAI,OACnB,yBACE,SAAC,KAAD,CAAMuB,GAAE,kBAAavB,EAAKZ,IAA1B,SAAiCY,EAAKqB,MAAQrB,EAAKwB,SAD5CxB,EAAKZ,GADK,QAS9B,ECpDD,EAVe,WACb,OACE,+BACE,0BACE,SAAC,EAAD,OAIP,C","sources":["api.js","webpack://react-homework-template/./src/components/SearchMovies/searchMovies.module.css?7ef5","components/SearchMovies/SearchMovies.js","pages/Movies.pg/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '8ba51ca9b1ac445c77c0779168705c6a';\n\nexport const apiReesult = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchArticlesWithQuery = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return await response;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n};\n\nexport const fetchSearchFilm = async search => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${search}&api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"searchMovies_input__ox5ak\",\"button\":\"searchMovies_button__qO1xH\",\"bg\":\"searchMovies_bg__RT8y+\",\"list\":\"searchMovies_list__zdXMS\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { fetchSearchFilm } from 'api';\nimport css from './searchMovies.module.css';\nimport Notiflix from 'notiflix';\n\nconst SearchMovies = () => {\n  const [search, setSearch] = useState(null);\n  const [detailsFilm, setDetailsFilm] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const film = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchApi = async search => {\n      try {\n        await fetchSearchFilm(search).then(res => {\n          setDetailsFilm(res.data.results);\n        });\n      } catch ({ error }) {\n        Notiflix.Notify.failure(error);\n      }\n    };\n\n    if (film === null) {\n      return;\n    } else if (film) {\n      fetchApi(film);\n    }\n\n    if (search) {\n      fetchApi(search);\n    }\n  }, [search, film, detailsFilm]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target.film.value;\n    if (!form) {\n      return Notiflix.Notify.failure('Please fill in the search field');\n    }\n    setSearchParams({ query: form });\n    setSearch(form);\n\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.bg}>\n        <input type=\"text\" name=\"film\" className={css.input} />\n        <button type=\"submit\" className={css.button}>\n          Search\n        </button>\n      </form>\n      {detailsFilm && (\n        <ul className={css.list}>\n          {detailsFilm.map(film => (\n            <li key={film.id}>\n              <Link to={`/movies/${film.id}`}>{film.name || film.title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default SearchMovies;\n","import SearchMovies from 'components/SearchMovies/SearchMovies';\n// import css from './movies.module.css';\n\nconst Movies = () => {\n  return (\n    <>\n      <div>\n        <SearchMovies />\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","apiReesult","axios","response","fetchArticlesWithQuery","id","fetchCast","fetchReviews","fetchSearchFilm","search","useState","setSearch","detailsFilm","setDetailsFilm","useSearchParams","searchParams","setSearchParams","film","get","useEffect","fetchApi","then","res","data","results","error","Notiflix","onSubmit","e","preventDefault","form","target","value","query","reset","className","css","type","name","map","to","title"],"sourceRoot":""}