{"version":3,"file":"static/js/270.d6d09fc9.chunk.js","mappings":"uRAEMA,EAAU,mCACVC,EAAW,+BAEJC,EAAU,mCAAG,oGACDC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,qCACmBD,EADnB,oBADC,cAClBI,EADkB,yBAIjBA,GAJiB,2CAAH,qDAOVC,EAAsB,mCAAG,WAAMC,GAAN,uFACbH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAK,EADA,oBACcN,EADd,oBADa,cAC9BI,EAD8B,gBAIvBA,EAJuB,mFAAH,sDAOtBG,EAAkB,mCAAG,WAAOD,EAAIE,GAAX,uFACTL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAK,EADA,YACME,EADN,oBACuBR,EADvB,oBADS,cAC1BI,EAD0B,yBAKzBA,GALyB,2CAAH,wDAQlBK,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,+BACaS,EADb,oBAC+BV,EAD/B,oBADM,cACvBI,EADuB,yBAKtBA,GALsB,2CAAH,qD,sIC1B5B,EAA0B,yB,2BC6C1B,EAxCgB,WACd,OAA8BO,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,WAAMH,GAAN,iGAEPP,EAAAA,EAAAA,IAAmBO,EAAQ,WAAWI,MAAK,SAAAC,GAC3CA,EAAIC,KAAKC,QAAQC,OAAS,GAC5BT,EAAWM,EAAIC,KAAKC,QAEvB,IANY,sDAOJE,EAPI,KAOJA,MACTC,IAAAA,OAAAA,QAAwBD,GARX,wDAAH,sDAYVT,GACFG,EAASH,EAEZ,GAAE,CAACA,KAGF,gBAAKW,UAAWC,EAAhB,SACGd,GACC,yBACGA,EAAQe,KAAI,SAAAC,GAAM,OACjB,4BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFHF,EAAOtB,GADA,OAQrB,gEAIP,C","sources":["api.js","webpack://react-homework-template/./src/components/Reviews/reviews.module.css?5c8c","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '8ba51ca9b1ac445c77c0779168705c6a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const apiReesult = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchArticlesWithQuery = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return await response;\n};\n\nexport const fetchCastOrReviews = async (id, query) => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/${query}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n};\n\nexport const fetchSearchFilm = async search => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?query=${search}&api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"details\":\"reviews_details__wDiba\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchCastOrReviews } from 'api';\nimport css from './reviews.module.css';\nimport Notiflix from 'notiflix';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState();\n  const { filmId } = useParams();\n\n  useEffect(() => {\n    const fetchApi = async filmId => {\n      try {\n        await fetchCastOrReviews(filmId, 'reviews').then(res => {\n          if (res.data.results.length > 0) {\n            setReviews(res.data.results);\n          }\n        });\n      } catch ({ error }) {\n        Notiflix.Notify.failure(error);\n      }\n    };\n\n    if (filmId) {\n      fetchApi(filmId);\n    }\n  }, [filmId]);\n\n  return (\n    <div className={css.details}>\n      {reviews ? (\n        <div>\n          {reviews.map(review => (\n            <div key={review.id}>\n              <h2>Author:{review.author}</h2>\n              <p>{review.content}</p>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>There are no reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","BASE_URL","apiReesult","axios","response","fetchArticlesWithQuery","id","fetchCastOrReviews","query","fetchSearchFilm","search","useState","reviews","setReviews","filmId","useParams","useEffect","fetchApi","then","res","data","results","length","error","Notiflix","className","css","map","review","author","content"],"sourceRoot":""}